{"version":3,"sources":["Post.js","firebase.js","TweetBox.js","Feed.js","SidebarOption.js","Sidebar.js","Widgets.js","App.js","reportWebVitals.js","index.js"],"names":["Post","forwardRef","ref","displayName","username","verified","text","image","avatar","className","Avatar","src","alt","fontSize","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","TweetBox","useState","tweetMessage","setTweetMessage","tweetImage","setTweetImage","type","placeholder","value","onChange","e","target","Button","onClick","preventDefault","collection","add","timestamp","FieldValue","serverTimestamp","Feed","posts","setPosts","useEffect","orderBy","onSnapshot","snapshot","docs","map","doc","data","post","SidebarOption","active","Icon","Sidebar","HomeIcon","SearchIcon","NotificationsNoneIcon","MailOutlineIcon","BookmarkBorderIcon","ListAltIcon","PermIdentityIcon","MoreHorizIcon","variant","fullWidth","Widgets","tweetId","sourceType","screenName","options","height","url","via","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d64832a8.chunk.js","sourcesContent":["import { Avatar } from '@material-ui/core';\r\nimport VerifiedUserIcon from \"@material-ui/icons/VerifiedUser\";\r\nimport ChatBubbleOutlineIcon from \"@material-ui/icons/ChatBubbleOutline\";\r\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\r\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\r\nimport PublishIcon from \"@material-ui/icons/Publish\";\r\nimport './Post.css'\r\nimport { forwardRef } from 'react';\r\n\r\n\r\nconst Post = forwardRef(({ displayName, username, verified, text, image, avatar }, ref) => {\r\n    ;\r\n\r\n    return (\r\n        <div className=\"post\" ref={ref}>\r\n            <div className=\"post__avatar\">\r\n                <Avatar src={avatar} />\r\n            </div>\r\n            <div className=\"post__body\">\r\n                <div className=\"post__header\">\r\n                    <div className=\"post__headerText\">\r\n                        <h3>\r\n                            {displayName}\r\n                            <span className=\"post__headerSpecial\" >\r\n                                {verified && <VerifiedUserIcon className=\"post__badge\" />} @{username}\r\n                            </span>\r\n                        </h3>\r\n                    </div>\r\n                    <div className=\"post__headerDescription\">\r\n                        <p>{text}</p>\r\n                    </div>\r\n                    <img src={image} alt=\"\" />\r\n                    <div className=\"post__footer\">\r\n                        <ChatBubbleOutlineIcon fontSize=\"small\" />\r\n                        <RepeatIcon fontSize=\"small\" />\r\n                        <FavoriteBorderIcon fontSize=\"small\" />\r\n                        <PublishIcon fontSize=\"small\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n})\r\n\r\nexport default Post;","import firebase from 'firebase';\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDGWCw5_GhKXGTUvdFF1riOe05J3Rda344\",\r\n    authDomain: \"twitter-clone-5ab4b.firebaseapp.com\",\r\n    projectId: \"twitter-clone-5ab4b\",\r\n    storageBucket: \"twitter-clone-5ab4b.appspot.com\",\r\n    messagingSenderId: \"171762591858\",\r\n    appId: \"1:171762591858:web:166ed183a54e991f64faeb\"\r\n};\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig)\r\n\r\nconst db = firebaseApp.firestore();\r\nexport default db;","import { Avatar, Button } from '@material-ui/core'\r\nimport { useState } from 'react';\r\nimport './TweetBox.css'\r\nimport db from './firebase'\r\nimport firebase from 'firebase'\r\nconst TweetBox = () => {\r\n    const [tweetMessage, setTweetMessage] = useState('')\r\n    const [tweetImage, setTweetImage] = useState('')\r\n\r\n    const sendTweet = e => {\r\n        e.preventDefault();\r\n        db.collection('posts').add({\r\n            displayName: 'Dawid Spisak',\r\n            username: 'stairss',\r\n            verified: true,\r\n            text: tweetMessage,\r\n            image: tweetImage,\r\n            avatar: 'https://cdni.rt.com/files/2021.01/article/6016b93285f54046e775c255.JPG',\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp()\r\n        })\r\n        setTweetImage('');\r\n        setTweetMessage('');\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"tweetBox\">\r\n            <form >\r\n                <div className=\"tweetBox__input\">\r\n                    <Avatar src=\"https://cdni.rt.com/files/2021.01/article/6016b93285f54046e775c255.JPG\" />\r\n                    <input type=\"text\"\r\n                        placeholder=\"What's happening?\"\r\n                        value={tweetMessage}\r\n                        onChange={(e) => setTweetMessage(e.target.value)}\r\n                    />\r\n\r\n                </div>\r\n                <input type=\"text\" placeholder=\"Enter image URL\" className=\"tweetBox__imageInput\"\r\n                    value={tweetImage}\r\n                    onChange={(e) => setTweetImage(e.target.value)} />\r\n                <Button onClick={sendTweet} className=\"tweetBox__tweetButton\">\r\n                    Tweet\r\n                </Button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TweetBox;","import { useEffect, useState } from 'react';\r\nimport './Feed.css';\r\nimport Post from './Post';\r\nimport TweetBox from './TweetBox';\r\nimport db from './firebase';\r\nimport FlipMove from 'react-flip-move';\r\n\r\nconst Feed = () => {\r\n    const [posts, setPosts] = useState([]);\r\n\r\n    useEffect(() => {\r\n        db.collection('posts').orderBy('timestamp', 'desc').onSnapshot(snapshot => (\r\n            setPosts(snapshot.docs.map(doc => doc.data()))\r\n        ))\r\n\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className=\"feed\">\r\n            <div className=\"feed__header\">\r\n                <h2>Home</h2>\r\n            </div>\r\n            <TweetBox />\r\n            <FlipMove>\r\n                {posts.map(post => (\r\n                    <Post\r\n                        key={post.text}\r\n                        displayName={post.displayName}\r\n                        username={post.username}\r\n                        verified={post.verified}\r\n                        text={post.text}\r\n                        avatar={post.avatar}\r\n                        image={post.image}\r\n                    />\r\n                ))}\r\n            </FlipMove>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Feed;","import './SidebarOption.css'\r\n\r\nconst SidebarOption = ({ active, text, Icon }) => {\r\n    return (\r\n        <div className={`sidebarOption ${active && 'sidebarOption--active'}`}>\r\n            <Icon />\r\n            <h2>{text}</h2>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SidebarOption;","import React from \"react\";\r\nimport \"./Sidebar.css\";\r\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\r\nimport SidebarOption from \"./SidebarOption\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport NotificationsNoneIcon from \"@material-ui/icons/NotificationsNone\";\r\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\";\r\nimport BookmarkBorderIcon from \"@material-ui/icons/BookmarkBorder\";\r\nimport ListAltIcon from \"@material-ui/icons/ListAlt\";\r\nimport PermIdentityIcon from \"@material-ui/icons/PermIdentity\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nfunction Sidebar() {\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <TwitterIcon className=\"sidebar__twitterIcon\" />\r\n\r\n            <SidebarOption active Icon={HomeIcon} text=\"Home\" />\r\n            <SidebarOption Icon={SearchIcon} text=\"Explore\" />\r\n            <SidebarOption Icon={NotificationsNoneIcon} text=\"Notifications\" />\r\n            <SidebarOption Icon={MailOutlineIcon} text=\"Messages\" />\r\n            <SidebarOption Icon={BookmarkBorderIcon} text=\"Bookmarks\" />\r\n            <SidebarOption Icon={ListAltIcon} text=\"Lists\" />\r\n            <SidebarOption Icon={PermIdentityIcon} text=\"Profile\" />\r\n            <SidebarOption Icon={MoreHorizIcon} text=\"More\" />\r\n\r\n            <Button variant=\"outlined\" className=\"sidebar__tweet\" fullWidth>Tweet</Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Sidebar;","import './Widgets.css';\r\nimport {\r\n    TwitterTimelineEmbed,\r\n    TwitterShareButton,\r\n    TwitterTweetEmbed\r\n} from 'react-twitter-embed';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nconst Widgets = () => {\r\n    return (\r\n        <div className=\"widgets\">\r\n            <div className=\"widgets__input\">\r\n                <SearchIcon className=\"widgets__searchIcon\" />\r\n                <input type=\"text\" placeholder=\"Search Twitter\" />\r\n            </div>\r\n            <div className=\"widgets__widgetContainer\">\r\n                <h2>What's happening</h2>\r\n                <TwitterTweetEmbed tweetId={\"1380423408542904326\"} />\r\n                <TwitterTimelineEmbed\r\n                    sourceType=\"profile\"\r\n                    screenName=\"elonmusk\"\r\n                    options={{ height: 400 }}\r\n                />\r\n                <TwitterShareButton\r\n                    url={\"https://www.facebook.com/profile.php?id=100011721724719\"}\r\n                    options={{ text: \"#reactjs is awesome\", via: \"Dawid Spisak\" }}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Widgets;","import './App.css';\nimport Feed from './Feed';\nimport Sidebar from './Sidebar';\nimport Widgets from './Widgets';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Sidebar />\n      <Feed />\n      <Widgets />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}